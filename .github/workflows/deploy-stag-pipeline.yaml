name: "Pipeline to deploy: Stag Env"
on:
  workflow_dispatch:
    branches:
      - main
      - add-code

env:
  REGISTRY: ghcr.io/iv1310
  IMAGE_API_NAME: my-api-uwu
  IMAGE_FRONTEND_NAME: my-spa-uwu

jobs:
  changes-check:
    permissions: read-all
    name: Check code changes
    runs-on: ubuntu-latest
    outputs:
      go: ${{ steps.code-check.outputs.go }}
      node: ${{ steps.code-check.outputs.node }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v3
        id: code-check
        with:
          filters: |
            node:
              - "my-spa-uwu/**"
            go:
              - "my-api-uwu/**"

  go-pull-request-checks:
    needs: changes-check
    if: ${{ needs.changes-check.outputs.go == 'true' }}
    name: Ddeploy go app to Cluster
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_API_NAME }}
          tags: |
            type=ref,event=pr
            type=sha
      - name: Log in to Private Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./my-api-uwu/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
      - uses: chrisdickinson/setup-yq@latest
        name: Replace image tag
        run: |
          yq -i '.apps.image.tag |= sub("<IMAGE_TAG>", "sha-${{ env.COMMIT_SHORT_SHA }}")' my-api-uwu/helm-charts/values-stag.yaml
      - name: deploy go app to cluster
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: |
            helm dependency build my-api-uwu/helm-chart
            helm upgrade --install my-api-uwu -n stag-my-api-uwu my-api-uwu/helm-charts -f my-api-uwu/helm-charts/values.yaml -f my-api-uwu/helm-charts/values-stag.yaml

  node-pull-request-checks:
    needs: changes-check
    if: ${{ needs.changes-check.outputs.node == 'true' }}
    name: Deploy node app to Cluster
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_FRONTEND_NAME }}
          tags: |
            type=ref,event=branch
            type=sha
      - name: Log in to Private Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./my-spa-uwu/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
      - uses: chrisdickinson/setup-yq@latest
        name: Replace image tag
        run: |
          yq -i '.apps.image.tag |= sub("<IMAGE_TAG>", "sha-${{ env.COMMIT_SHORT_SHA }}")' my-spa-uwu/helm-charts/values-stag.yaml
      - name: deploy go app to cluster
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: |
            helm dependency build my-spa-uwu/helm-charts
            helm upgrade --install my-spa-uwu -n stag-my-spa-uwu my-spa-uwu/helm-charts -f my-spa-uwu/helm-charts/values.yaml -f my-spa-uwu/helm-charts/values-stag.yaml
